""" A U T O G E N E R A T E D  -- D O   N O T   M O D I F Y
@generated

This file is generated by prebuilt_toolchains.py
"""

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("@rules_foreign_cc//toolchains:prebuilt_toolchains_repository.bzl", "prebuilt_toolchains_repository")

_CMAKE_BUILD_FILE = """\
load("@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl", "native_tool_toolchain")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "cmake_data",
    srcs = glob(
        [
            "**",
        ],
        exclude = [
            "WORKSPACE",
            "WORKSPACE.bazel",
            "BUILD",
            "BUILD.bazel",
        ],
    ),
)

native_tool_toolchain(
    name = "cmake_tool",
    path = "bin/{bin}",
    target = ":cmake_data",
)
"""

_NINJA_BUILD_FILE = """\
load("@rules_foreign_cc//toolchains/native_tools:native_tools_toolchain.bzl", "native_tool_toolchain")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "ninja_bin",
    srcs = ["{bin}"],
)

native_tool_toolchain(
    name = "ninja_tool",
    path = "$(execpath :ninja_bin)",
    target = ":ninja_bin",
)
"""

# buildifier: disable=unnamed-macro
def prebuilt_toolchains(cmake_version, ninja_version):
    """Register toolchains for pre-built cmake and ninja binaries

    Args:
        cmake_version (string): The target cmake version
        ninja_version (string): The target ninja-build version
    """
    _cmake_toolchains(cmake_version)
    _ninja_toolchains(ninja_version)
    _make_toolchains()

def _cmake_toolchains(version):
    if "3.20.5" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.5-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-aarch64.tar.gz",
            ],
            sha256 = "d2fa6678e5f716de349be23f7096a935f35ed69caebea982f6d16368489c45a0",
            strip_prefix = "cmake-3.20.5-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.5-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-x86_64.tar.gz",
            ],
            sha256 = "5ffbc450c992cbc383c787576385ff35aefb762b0f05cbde8bab2c995ab045aa",
            strip_prefix = "cmake-3.20.5-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.5-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-macos-universal.tar.gz",
            ],
            sha256 = "000828af55268853ba21b91f8ce3bfb9365aa72aee960fc7f0c01a71f3a2217a",
            strip_prefix = "cmake-3.20.5-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.5-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-windows-i386.zip",
            ],
            sha256 = "3e288bb1b85d5bfab6671c9bdcea4192eeb02eae1fbf23d0e872e160bb644afa",
            strip_prefix = "cmake-3.20.5-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.5-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-windows-x86_64.zip",
            ],
            sha256 = "d064e3b4f76d9b8c63ea119c545f769d7bdbf19b484dc94df11508c4f3e05d6d",
            strip_prefix = "cmake-3.20.5-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.5_toolchains",
            repos = {
                "cmake-3.20.5-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.5-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.5-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.5-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.5-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.5_toolchains//:cmake-3.20.5-linux-aarch64_toolchain",
            "@cmake_3.20.5_toolchains//:cmake-3.20.5-linux-x86_64_toolchain",
            "@cmake_3.20.5_toolchains//:cmake-3.20.5-macos-universal_toolchain",
            "@cmake_3.20.5_toolchains//:cmake-3.20.5-windows-i386_toolchain",
            "@cmake_3.20.5_toolchains//:cmake-3.20.5-windows-x86_64_toolchain",
        )

        return

    if "3.20.4" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.4-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.4/cmake-3.20.4-linux-aarch64.tar.gz",
            ],
            sha256 = "d66869db7c0da56f2e32271e264756382f2f17e2421ac67f1372953cf8ec51a2",
            strip_prefix = "cmake-3.20.4-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.4-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.4/cmake-3.20.4-linux-x86_64.tar.gz",
            ],
            sha256 = "067feed25b76b3adf5863f5a5f7e2b8cafb2dcd6feeaac39a713372ef2c3584c",
            strip_prefix = "cmake-3.20.4-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.4-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.4/cmake-3.20.4-macos-universal.tar.gz",
            ],
            sha256 = "df90016635e3183834143c6d94607f0804fe9762f7cc6032f6a4afd7c19cd43b",
            strip_prefix = "cmake-3.20.4-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.4-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.4/cmake-3.20.4-windows-i386.zip",
            ],
            sha256 = "e571c0cebb237da800198ef89d1c874d15f04dfe13dc44d85c2a56e90a4a5209",
            strip_prefix = "cmake-3.20.4-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.4-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.4/cmake-3.20.4-windows-x86_64.zip",
            ],
            sha256 = "965d2f001c3ca807d288f2b6b15c42b25579a0e73ef12c2a72c95f4c69123638",
            strip_prefix = "cmake-3.20.4-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.4_toolchains",
            repos = {
                "cmake-3.20.4-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.4-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.4-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.4-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.4-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.4_toolchains//:cmake-3.20.4-linux-aarch64_toolchain",
            "@cmake_3.20.4_toolchains//:cmake-3.20.4-linux-x86_64_toolchain",
            "@cmake_3.20.4_toolchains//:cmake-3.20.4-macos-universal_toolchain",
            "@cmake_3.20.4_toolchains//:cmake-3.20.4-windows-i386_toolchain",
            "@cmake_3.20.4_toolchains//:cmake-3.20.4-windows-x86_64_toolchain",
        )

        return

    if "3.20.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.3-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-linux-aarch64.tar.gz",
            ],
            sha256 = "77620f99e9d5f39cf4a49294c6a68c89a978ecef144894618974b9958efe3c2a",
            strip_prefix = "cmake-3.20.3-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.3-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-linux-x86_64.tar.gz",
            ],
            sha256 = "97bf730372f9900b2dfb9206fccbcf92f5c7f3b502148b832e77451aa0f9e0e6",
            strip_prefix = "cmake-3.20.3-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.3-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-macos-universal.tar.gz",
            ],
            sha256 = "5f72dba3aa5f3800fb29ab6115ae0b31f10bdb2aad66204e14c98f6ac7e6b6ed",
            strip_prefix = "cmake-3.20.3-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.3-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-windows-i386.zip",
            ],
            sha256 = "b690206f58368afd69244e8dc029b0b3dacae31bb6d4f6ab713b0e18a686aa7d",
            strip_prefix = "cmake-3.20.3-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.3-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-windows-x86_64.zip",
            ],
            sha256 = "e276cf7fbb3e3e88bc666e183bc3ddaceb143a4c83fb357b1dbb1a26fd6e4ea2",
            strip_prefix = "cmake-3.20.3-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.3_toolchains",
            repos = {
                "cmake-3.20.3-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.3-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.3-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.3-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.3-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.3_toolchains//:cmake-3.20.3-linux-aarch64_toolchain",
            "@cmake_3.20.3_toolchains//:cmake-3.20.3-linux-x86_64_toolchain",
            "@cmake_3.20.3_toolchains//:cmake-3.20.3-macos-universal_toolchain",
            "@cmake_3.20.3_toolchains//:cmake-3.20.3-windows-i386_toolchain",
            "@cmake_3.20.3_toolchains//:cmake-3.20.3-windows-x86_64_toolchain",
        )

        return

    if "3.20.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.2-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-linux-aarch64.tar.gz",
            ],
            sha256 = "688a3ece018384966fed99a706bc8fbbbc50220393dce1531af36e640c46f601",
            strip_prefix = "cmake-3.20.2-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.2-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-linux-x86_64.tar.gz",
            ],
            sha256 = "3f827544f9c82e74ddf5016461fdfcfea4ede58a26f82612f473bf6bfad8bfc2",
            strip_prefix = "cmake-3.20.2-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.2-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-macos-universal.tar.gz",
            ],
            sha256 = "0100663380a3bd977b001183cd487412db7aad9de6859927bde97e1e6e44e645",
            strip_prefix = "cmake-3.20.2-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.2-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-windows-i386.zip",
            ],
            sha256 = "8ad1f1f9a1a0a0dc82107eb9a4351d91d4e72504b0343368f1569b72a5e48bc1",
            strip_prefix = "cmake-3.20.2-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.2-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-windows-x86_64.zip",
            ],
            sha256 = "15a49e2ab81c1822d75b1b1a92f7863f58e31f6d6aac1c4103eef2b071be3112",
            strip_prefix = "cmake-3.20.2-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.2_toolchains",
            repos = {
                "cmake-3.20.2-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.2-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.2-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.2-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.2-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.2_toolchains//:cmake-3.20.2-linux-aarch64_toolchain",
            "@cmake_3.20.2_toolchains//:cmake-3.20.2-linux-x86_64_toolchain",
            "@cmake_3.20.2_toolchains//:cmake-3.20.2-macos-universal_toolchain",
            "@cmake_3.20.2_toolchains//:cmake-3.20.2-windows-i386_toolchain",
            "@cmake_3.20.2_toolchains//:cmake-3.20.2-windows-x86_64_toolchain",
        )

        return

    if "3.20.1" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.1-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-linux-aarch64.tar.gz",
            ],
            sha256 = "5ad1f8139498a1956df369c401658ec787f63c8cb4e9759f2edaa51626a86512",
            strip_prefix = "cmake-3.20.1-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.1-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-linux-x86_64.tar.gz",
            ],
            sha256 = "b8c141bd7a6d335600ab0a8a35e75af79f95b837f736456b5532f4d717f20a09",
            strip_prefix = "cmake-3.20.1-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.1-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-macos-universal.tar.gz",
            ],
            sha256 = "44143d47fdcc7fc3042576c6a8b661e3b65a18143666f74d6e8d93ca3ab5cd95",
            strip_prefix = "cmake-3.20.1-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.1-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-windows-i386.zip",
            ],
            sha256 = "650026534e66dabe0ed6be3422e86fabce5fa86d43927171ea8b8dfd0877fc9d",
            strip_prefix = "cmake-3.20.1-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.1-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1-windows-x86_64.zip",
            ],
            sha256 = "9ed05401722f60e006420f5974c164795b321f0d8d8e7f2c0ed1180b5382201b",
            strip_prefix = "cmake-3.20.1-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.1_toolchains",
            repos = {
                "cmake-3.20.1-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.1-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.1-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.1-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.1-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.1_toolchains//:cmake-3.20.1-linux-aarch64_toolchain",
            "@cmake_3.20.1_toolchains//:cmake-3.20.1-linux-x86_64_toolchain",
            "@cmake_3.20.1_toolchains//:cmake-3.20.1-macos-universal_toolchain",
            "@cmake_3.20.1_toolchains//:cmake-3.20.1-windows-i386_toolchain",
            "@cmake_3.20.1_toolchains//:cmake-3.20.1-windows-x86_64_toolchain",
        )

        return

    if "3.20.0" == version:
        maybe(
            http_archive,
            name = "cmake-3.20.0-linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-aarch64.tar.gz",
            ],
            sha256 = "f1818d870f5be180e3059b1f3a2cae4a01161fdcb5b5441bec00d9e6aa3d6e0f",
            strip_prefix = "cmake-3.20.0-linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.0-linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-x86_64.tar.gz",
            ],
            sha256 = "3f8aeb2907d96cd4dc03955228b2be3f8b58cff65704bd9ce4599589253c8de8",
            strip_prefix = "cmake-3.20.0-linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.0-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-macos-universal.tar.gz",
            ],
            sha256 = "bca9645a17f528ffc267ac05033e25a1223dccb912d1f4bc5afcbeebad111662",
            strip_prefix = "cmake-3.20.0-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.0-windows-i386",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-windows-i386.zip",
            ],
            sha256 = "6df4c34f7d2735100ebae91e6d2d37b3c3c7b81e93decce9f4926a4e505affbc",
            strip_prefix = "cmake-3.20.0-windows-i386",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.20.0-windows-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-windows-x86_64.zip",
            ],
            sha256 = "056378cb599353479c3a8aa2654454b8a3eaa3c8c0872928ba7e09c3ec50774c",
            strip_prefix = "cmake-3.20.0-windows-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.20.0_toolchains",
            repos = {
                "cmake-3.20.0-linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.0-linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.20.0-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.20.0-windows-i386": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.20.0-windows-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.20.0_toolchains//:cmake-3.20.0-linux-aarch64_toolchain",
            "@cmake_3.20.0_toolchains//:cmake-3.20.0-linux-x86_64_toolchain",
            "@cmake_3.20.0_toolchains//:cmake-3.20.0-macos-universal_toolchain",
            "@cmake_3.20.0_toolchains//:cmake-3.20.0-windows-i386_toolchain",
            "@cmake_3.20.0_toolchains//:cmake-3.20.0-windows-x86_64_toolchain",
        )

        return

    if "3.19.8" == version:
        maybe(
            http_archive,
            name = "cmake-3.19.8-Linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-Linux-aarch64.tar.gz",
            ],
            sha256 = "807f5afb2a560e00af9640e496d5673afefc2888bf0ed076412884a5ebb547a1",
            strip_prefix = "cmake-3.19.8-Linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.8-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-Linux-x86_64.tar.gz",
            ],
            sha256 = "db0d7d225150dd6e08ce54995e671f9b4801b8e93e22df1eef52339f6bbbecd9",
            strip_prefix = "cmake-3.19.8-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.8-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-macos-universal.tar.gz",
            ],
            sha256 = "0976d23d982af05dcbfb3aa34fcb62ead43bea27f0e3bb95222f2a78161423f2",
            strip_prefix = "cmake-3.19.8-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.8-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-win32-x86.zip",
            ],
            sha256 = "f82bbfc56fe1c9f9f137991f742d09b79ec31168ef99eb67f8f4fa92276d9efb",
            strip_prefix = "cmake-3.19.8-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.8-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-win64-x64.zip",
            ],
            sha256 = "2a30877a3d6b50da305b289f4d1c03befdfaeb2edba02a563c681e883d810380",
            strip_prefix = "cmake-3.19.8-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.19.8_toolchains",
            repos = {
                "cmake-3.19.8-Linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.8-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.8-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.19.8-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.19.8-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.19.8_toolchains//:cmake-3.19.8-Linux-aarch64_toolchain",
            "@cmake_3.19.8_toolchains//:cmake-3.19.8-Linux-x86_64_toolchain",
            "@cmake_3.19.8_toolchains//:cmake-3.19.8-macos-universal_toolchain",
            "@cmake_3.19.8_toolchains//:cmake-3.19.8-win32-x86_toolchain",
            "@cmake_3.19.8_toolchains//:cmake-3.19.8-win64-x64_toolchain",
        )

        return

    if "3.19.7" == version:
        maybe(
            http_archive,
            name = "cmake-3.19.7-Linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.7/cmake-3.19.7-Linux-aarch64.tar.gz",
            ],
            sha256 = "eb1cf718eca1d5bc212a0ef76d19a977b6b6481a795985b8741c31f866c88e09",
            strip_prefix = "cmake-3.19.7-Linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.7-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.7/cmake-3.19.7-Linux-x86_64.tar.gz",
            ],
            sha256 = "ba4a5f46aab500e0d8d952ee735dcfb0c870d326e851addc037c99eb1ea4b66c",
            strip_prefix = "cmake-3.19.7-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.7-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.7/cmake-3.19.7-macos-universal.tar.gz",
            ],
            sha256 = "52036f8450fabb69bedc3c3eccc58202ae9eefe8358fa383978c7b142f931fa5",
            strip_prefix = "cmake-3.19.7-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.7-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.7/cmake-3.19.7-win32-x86.zip",
            ],
            sha256 = "7771205d94022787bc4c3a623629d236b10bf697315e9f92c214dd8b53e8746e",
            strip_prefix = "cmake-3.19.7-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.7-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.7/cmake-3.19.7-win64-x64.zip",
            ],
            sha256 = "e6788d6e23b3026c37fcfa7658075d6b5f9113f26fae17fe372ad4a7ee62d5fd",
            strip_prefix = "cmake-3.19.7-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.19.7_toolchains",
            repos = {
                "cmake-3.19.7-Linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.7-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.7-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.19.7-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.19.7-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.19.7_toolchains//:cmake-3.19.7-Linux-aarch64_toolchain",
            "@cmake_3.19.7_toolchains//:cmake-3.19.7-Linux-x86_64_toolchain",
            "@cmake_3.19.7_toolchains//:cmake-3.19.7-macos-universal_toolchain",
            "@cmake_3.19.7_toolchains//:cmake-3.19.7-win32-x86_toolchain",
            "@cmake_3.19.7_toolchains//:cmake-3.19.7-win64-x64_toolchain",
        )

        return

    if "3.19.6" == version:
        maybe(
            http_archive,
            name = "cmake-3.19.6-Linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-aarch64.tar.gz",
            ],
            sha256 = "69ec045c6993907a4f4a77349d0a0668f1bd3ce8bc5f6fbab6dc7a7e2ffc4f80",
            strip_prefix = "cmake-3.19.6-Linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.6-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-x86_64.tar.gz",
            ],
            sha256 = "139580473b84f5c6cf27b1d1ac84e9aa6968aa13e4b1900394c50075b366fb15",
            strip_prefix = "cmake-3.19.6-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.6-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-macos-universal.tar.gz",
            ],
            sha256 = "c0b73e5871e82153f0bced071c8f1a9e2b1884645d47c0565c7cb28fe894e6c7",
            strip_prefix = "cmake-3.19.6-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.6-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-win32-x86.zip",
            ],
            sha256 = "e0cd5a2ec34bd7954238ca2a4c7d3c67c49dac2ea285be3c098662a005ad46e0",
            strip_prefix = "cmake-3.19.6-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.6-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-win64-x64.zip",
            ],
            sha256 = "6883a07f95ae01360d24f1341622f71b3e6ddc6251381752cd4a4d9d4d704c67",
            strip_prefix = "cmake-3.19.6-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.19.6_toolchains",
            repos = {
                "cmake-3.19.6-Linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.6-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.6-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.19.6-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.19.6-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.19.6_toolchains//:cmake-3.19.6-Linux-aarch64_toolchain",
            "@cmake_3.19.6_toolchains//:cmake-3.19.6-Linux-x86_64_toolchain",
            "@cmake_3.19.6_toolchains//:cmake-3.19.6-macos-universal_toolchain",
            "@cmake_3.19.6_toolchains//:cmake-3.19.6-win32-x86_toolchain",
            "@cmake_3.19.6_toolchains//:cmake-3.19.6-win64-x64_toolchain",
        )

        return

    if "3.19.5" == version:
        maybe(
            http_archive,
            name = "cmake-3.19.5-Linux-aarch64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-Linux-aarch64.tar.gz",
            ],
            sha256 = "31b3de5e4bc56d96debaa336ffd19cbc6edeaea0828ec1e298f0dd09db55f0f4",
            strip_prefix = "cmake-3.19.5-Linux-aarch64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.5-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-Linux-x86_64.tar.gz",
            ],
            sha256 = "ad9102717d67a0e6d72d03d2a25dbbde24386b15b7815b31068cbf5f790638f1",
            strip_prefix = "cmake-3.19.5-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.5-macos-universal",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-macos-universal.tar.gz",
            ],
            sha256 = "bf38acc7f93980a9dff11ef1bd9b0d6852618a44edcdabc4722737fc83f5654b",
            strip_prefix = "cmake-3.19.5-macos-universal/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.5-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-win32-x86.zip",
            ],
            sha256 = "bb51f578195ca6587afe4e2fc67f6755fd6962aa0eb897713f309ac4567da6f4",
            strip_prefix = "cmake-3.19.5-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.19.5-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-win64-x64.zip",
            ],
            sha256 = "e2e12729ac43fb4702aedede0383601ea0d63b75d22f892f944d32749da123fd",
            strip_prefix = "cmake-3.19.5-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.19.5_toolchains",
            repos = {
                "cmake-3.19.5-Linux-aarch64": [
                    "@platforms//cpu:aarch64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.5-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.19.5-macos-universal": [
                    "@platforms//os:macos",
                ],
                "cmake-3.19.5-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.19.5-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.19.5_toolchains//:cmake-3.19.5-Linux-aarch64_toolchain",
            "@cmake_3.19.5_toolchains//:cmake-3.19.5-Linux-x86_64_toolchain",
            "@cmake_3.19.5_toolchains//:cmake-3.19.5-macos-universal_toolchain",
            "@cmake_3.19.5_toolchains//:cmake-3.19.5-win32-x86_toolchain",
            "@cmake_3.19.5_toolchains//:cmake-3.19.5-win64-x64_toolchain",
        )

        return

    if "3.18.6" == version:
        maybe(
            http_archive,
            name = "cmake-3.18.6-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-Darwin-x86_64.tar.gz",
            ],
            sha256 = "676dc3f1d6f15cd7c1d9f4fa7e2a43613f426cd20783c02d4fdb5e139f39eec3",
            strip_prefix = "cmake-3.18.6-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.18.6-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-Linux-x86_64.tar.gz",
            ],
            sha256 = "87136646867ed65e935d6bacd44d52a740c448ad0806f6897d8c3d47ce438c8b",
            strip_prefix = "cmake-3.18.6-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.18.6-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-win32-x86.zip",
            ],
            sha256 = "f6531568def18afecf3d54abd7ccf1f9cf092c683b14fde36b47910c7f822e8d",
            strip_prefix = "cmake-3.18.6-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.18.6-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-win64-x64.zip",
            ],
            sha256 = "6a7166841bf2d72d56b5ff8c7c7606901bd8a0d87194f509b759d3ae3b6fdd6e",
            strip_prefix = "cmake-3.18.6-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.18.6_toolchains",
            repos = {
                "cmake-3.18.6-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.18.6-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.18.6-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.18.6-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.18.6_toolchains//:cmake-3.18.6-Darwin-x86_64_toolchain",
            "@cmake_3.18.6_toolchains//:cmake-3.18.6-Linux-x86_64_toolchain",
            "@cmake_3.18.6_toolchains//:cmake-3.18.6-win32-x86_toolchain",
            "@cmake_3.18.6_toolchains//:cmake-3.18.6-win64-x64_toolchain",
        )

        return

    if "3.17.5" == version:
        maybe(
            http_archive,
            name = "cmake-3.17.5-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.17.5/cmake-3.17.5-Darwin-x86_64.tar.gz",
            ],
            sha256 = "7556e90cdf69b3f16e2efe10b3f3557c82488c93de89d7c192729178b573d679",
            strip_prefix = "cmake-3.17.5-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.17.5-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.17.5/cmake-3.17.5-Linux-x86_64.tar.gz",
            ],
            sha256 = "897142368b15a5693c999a7ed2187be20c1b41a68c3711379d32a33469bb29ba",
            strip_prefix = "cmake-3.17.5-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.17.5-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.17.5/cmake-3.17.5-win32-x86.zip",
            ],
            sha256 = "666a4f46957aee89c18664a51e1373b3d80c07045b1aada25a9625d208be46bc",
            strip_prefix = "cmake-3.17.5-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.17.5-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.17.5/cmake-3.17.5-win64-x64.zip",
            ],
            sha256 = "7134ba36fc031565eb9eb50e37c24be2e4d902e090b5cfd48b5f434aaf6eefa8",
            strip_prefix = "cmake-3.17.5-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.17.5_toolchains",
            repos = {
                "cmake-3.17.5-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.17.5-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.17.5-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.17.5-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.17.5_toolchains//:cmake-3.17.5-Darwin-x86_64_toolchain",
            "@cmake_3.17.5_toolchains//:cmake-3.17.5-Linux-x86_64_toolchain",
            "@cmake_3.17.5_toolchains//:cmake-3.17.5-win32-x86_toolchain",
            "@cmake_3.17.5_toolchains//:cmake-3.17.5-win64-x64_toolchain",
        )

        return

    if "3.16.9" == version:
        maybe(
            http_archive,
            name = "cmake-3.16.9-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.16.9/cmake-3.16.9-Darwin-x86_64.tar.gz",
            ],
            sha256 = "ed0583446e6ee1ff6347c0011a0f7141d7a4fd5b97b51e213a418f12789ea9f9",
            strip_prefix = "cmake-3.16.9-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.16.9-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.16.9/cmake-3.16.9-Linux-x86_64.tar.gz",
            ],
            sha256 = "96d79367dcafb47d606573a4687021d3cb18dd53d83458fc1d6d9c89bf31b553",
            strip_prefix = "cmake-3.16.9-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.16.9-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.16.9/cmake-3.16.9-win32-x86.zip",
            ],
            sha256 = "5362139fe0540f5eb88a964a97f5d3a6c74ea5a93bace9916fde3de11fb5af2e",
            strip_prefix = "cmake-3.16.9-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.16.9-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.16.9/cmake-3.16.9-win64-x64.zip",
            ],
            sha256 = "60f2296c241b1188c4a5870bbdebf01a2a25a87d21b6f95c1bba924adb94c62f",
            strip_prefix = "cmake-3.16.9-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.16.9_toolchains",
            repos = {
                "cmake-3.16.9-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.16.9-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.16.9-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.16.9-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.16.9_toolchains//:cmake-3.16.9-Darwin-x86_64_toolchain",
            "@cmake_3.16.9_toolchains//:cmake-3.16.9-Linux-x86_64_toolchain",
            "@cmake_3.16.9_toolchains//:cmake-3.16.9-win32-x86_toolchain",
            "@cmake_3.16.9_toolchains//:cmake-3.16.9-win64-x64_toolchain",
        )

        return

    if "3.15.7" == version:
        maybe(
            http_archive,
            name = "cmake-3.15.7-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-Darwin-x86_64.tar.gz",
            ],
            sha256 = "cafa3c3b96cf9877c7bddc024edb3a0dd8abdc123add0f141f825ce61eeb5d1e",
            strip_prefix = "cmake-3.15.7-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.15.7-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-Linux-x86_64.tar.gz",
            ],
            sha256 = "8456a10ac2fd0dc97d13aa4753431a232cf32aecb0976541f7bf867a3f90ec57",
            strip_prefix = "cmake-3.15.7-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.15.7-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-win32-x86.zip",
            ],
            sha256 = "9616ad2a72ac1ad76cd25ba8f5c73be8bf881be85af44e442cab9a1700800008",
            strip_prefix = "cmake-3.15.7-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.15.7-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-win64-x64.zip",
            ],
            sha256 = "d5c691fd40ba84983a05e205d1db810adf77b90ca76106a27821e9e9405bc31b",
            strip_prefix = "cmake-3.15.7-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.15.7_toolchains",
            repos = {
                "cmake-3.15.7-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.15.7-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.15.7-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.15.7-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.15.7_toolchains//:cmake-3.15.7-Darwin-x86_64_toolchain",
            "@cmake_3.15.7_toolchains//:cmake-3.15.7-Linux-x86_64_toolchain",
            "@cmake_3.15.7_toolchains//:cmake-3.15.7-win32-x86_toolchain",
            "@cmake_3.15.7_toolchains//:cmake-3.15.7-win64-x64_toolchain",
        )

        return

    if "3.14.7" == version:
        maybe(
            http_archive,
            name = "cmake-3.14.7-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Darwin-x86_64.tar.gz",
            ],
            sha256 = "5d69fc79f7dff65a999b5c321d606d9152d7cde0717817c5f4d2b14be4a5862b",
            strip_prefix = "cmake-3.14.7-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.14.7-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Linux-x86_64.tar.gz",
            ],
            sha256 = "85aa7e9d77a9848bfae26289424d4f1cb4a0b0579b0e30e31148a37f140c33c2",
            strip_prefix = "cmake-3.14.7-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.14.7-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-win32-x86.zip",
            ],
            sha256 = "55eafae4327cc8cedaf69eb012e3dcfd88e2045279d12c49c7af253c49786237",
            strip_prefix = "cmake-3.14.7-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.14.7-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-win64-x64.zip",
            ],
            sha256 = "e3ce0bdd966dc9a8e9c57ea949bc195c36c6f843bd3e431990d59c381be7ba8e",
            strip_prefix = "cmake-3.14.7-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.14.7_toolchains",
            repos = {
                "cmake-3.14.7-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.14.7-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.14.7-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.14.7-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.14.7_toolchains//:cmake-3.14.7-Darwin-x86_64_toolchain",
            "@cmake_3.14.7_toolchains//:cmake-3.14.7-Linux-x86_64_toolchain",
            "@cmake_3.14.7_toolchains//:cmake-3.14.7-win32-x86_toolchain",
            "@cmake_3.14.7_toolchains//:cmake-3.14.7-win64-x64_toolchain",
        )

        return

    if "3.13.5" == version:
        maybe(
            http_archive,
            name = "cmake-3.13.5-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-Darwin-x86_64.tar.gz",
            ],
            sha256 = "e04bcd52c64c2ee44f6def2ac4d5a610f01b329d0db65aecc2bb5135602ebfe0",
            strip_prefix = "cmake-3.13.5-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.13.5-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-Linux-x86_64.tar.gz",
            ],
            sha256 = "e2fd0080a6f0fc1ec84647acdcd8e0b4019770f48d83509e6a5b0b6ea27e5864",
            strip_prefix = "cmake-3.13.5-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.13.5-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-win32-x86.zip",
            ],
            sha256 = "0b61adede8f858464849d79d55044127032564c4c8a091322f8efb30ff4da3c4",
            strip_prefix = "cmake-3.13.5-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.13.5-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.13.5/cmake-3.13.5-win64-x64.zip",
            ],
            sha256 = "bdc4622f2fcf26cc16838d264b1cef0d5bc2e5b455d4a26ab7952781965eae79",
            strip_prefix = "cmake-3.13.5-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.13.5_toolchains",
            repos = {
                "cmake-3.13.5-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.13.5-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.13.5-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.13.5-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.13.5_toolchains//:cmake-3.13.5-Darwin-x86_64_toolchain",
            "@cmake_3.13.5_toolchains//:cmake-3.13.5-Linux-x86_64_toolchain",
            "@cmake_3.13.5_toolchains//:cmake-3.13.5-win32-x86_toolchain",
            "@cmake_3.13.5_toolchains//:cmake-3.13.5-win64-x64_toolchain",
        )

        return

    if "3.12.4" == version:
        maybe(
            http_archive,
            name = "cmake-3.12.4-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-Darwin-x86_64.tar.gz",
            ],
            sha256 = "95d76c00ccb9ecb5cb51de137de00965c5e8d34b2cf71556cf8ba40577d1cff3",
            strip_prefix = "cmake-3.12.4-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.12.4-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-Linux-x86_64.tar.gz",
            ],
            sha256 = "486edd6710b5250946b4b199406ccbf8f567ef0e23cfe38f7938b8c78a2ffa5f",
            strip_prefix = "cmake-3.12.4-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.12.4-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-win32-x86.zip",
            ],
            sha256 = "2c1c3c269ca4a222c8768d8f966d8556365b9bf7af77f9885d0b29a19cbf5354",
            strip_prefix = "cmake-3.12.4-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.12.4-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-win64-x64.zip",
            ],
            sha256 = "4dd43cdc0fef6c70e3d92a8aef4f2c66a8c5f4ad08a66ed2b376766dbd815069",
            strip_prefix = "cmake-3.12.4-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.12.4_toolchains",
            repos = {
                "cmake-3.12.4-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.12.4-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.12.4-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.12.4-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.12.4_toolchains//:cmake-3.12.4-Darwin-x86_64_toolchain",
            "@cmake_3.12.4_toolchains//:cmake-3.12.4-Linux-x86_64_toolchain",
            "@cmake_3.12.4_toolchains//:cmake-3.12.4-win32-x86_toolchain",
            "@cmake_3.12.4_toolchains//:cmake-3.12.4-win64-x64_toolchain",
        )

        return

    if "3.11.4" == version:
        maybe(
            http_archive,
            name = "cmake-3.11.4-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.11.4/cmake-3.11.4-Darwin-x86_64.tar.gz",
            ],
            sha256 = "2b5eb705f036b1906a5e0bce996e9cd56d43d73bdee8318ece3e5ce31657b812",
            strip_prefix = "cmake-3.11.4-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.11.4-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.11.4/cmake-3.11.4-Linux-x86_64.tar.gz",
            ],
            sha256 = "6dab016a6b82082b8bcd0f4d1e53418d6372015dd983d29367b9153f1a376435",
            strip_prefix = "cmake-3.11.4-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.11.4-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.11.4/cmake-3.11.4-win32-x86.zip",
            ],
            sha256 = "b068001ff879f86e704977c50a8c5917e4b4406c66242366dba2674abe316579",
            strip_prefix = "cmake-3.11.4-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.11.4-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.11.4/cmake-3.11.4-win64-x64.zip",
            ],
            sha256 = "d3102abd0ded446c898252b58857871ee170312d8e7fd5cbff01fbcb1068a6e5",
            strip_prefix = "cmake-3.11.4-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.11.4_toolchains",
            repos = {
                "cmake-3.11.4-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.11.4-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.11.4-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.11.4-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.11.4_toolchains//:cmake-3.11.4-Darwin-x86_64_toolchain",
            "@cmake_3.11.4_toolchains//:cmake-3.11.4-Linux-x86_64_toolchain",
            "@cmake_3.11.4_toolchains//:cmake-3.11.4-win32-x86_toolchain",
            "@cmake_3.11.4_toolchains//:cmake-3.11.4-win64-x64_toolchain",
        )

        return

    if "3.10.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.10.3-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.10.3/cmake-3.10.3-Darwin-x86_64.tar.gz",
            ],
            sha256 = "e88d31a5200274407b7ea83cb2195ffc18cd6ceb1278b36c0501be6a118039a8",
            strip_prefix = "cmake-3.10.3-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.10.3-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.10.3/cmake-3.10.3-Linux-x86_64.tar.gz",
            ],
            sha256 = "9e7c48b797484f74c5ee3ae55132b40b16ed8e81ee762402da8971205b0a896b",
            strip_prefix = "cmake-3.10.3-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.10.3-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.10.3/cmake-3.10.3-win32-x86.zip",
            ],
            sha256 = "edbbfb7f6f4e4f913de4a16d228cf6156ac7071596b6d25f2891a60a006735ea",
            strip_prefix = "cmake-3.10.3-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.10.3-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.10.3/cmake-3.10.3-win64-x64.zip",
            ],
            sha256 = "3bd57d1cfcf720a4cc72db77bda4c76a7b700fb0341821ad868963ad28856cd0",
            strip_prefix = "cmake-3.10.3-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.10.3_toolchains",
            repos = {
                "cmake-3.10.3-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.10.3-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.10.3-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.10.3-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.10.3_toolchains//:cmake-3.10.3-Darwin-x86_64_toolchain",
            "@cmake_3.10.3_toolchains//:cmake-3.10.3-Linux-x86_64_toolchain",
            "@cmake_3.10.3_toolchains//:cmake-3.10.3-win32-x86_toolchain",
            "@cmake_3.10.3_toolchains//:cmake-3.10.3-win64-x64_toolchain",
        )

        return

    if "3.9.6" == version:
        maybe(
            http_archive,
            name = "cmake-3.9.6-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.9.6/cmake-3.9.6-Darwin-x86_64.tar.gz",
            ],
            sha256 = "1694f3e183954ab6aadb2d7f85552aa2e050fab97ef4cbc817b1165255703599",
            strip_prefix = "cmake-3.9.6-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.9.6-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.9.6/cmake-3.9.6-Linux-x86_64.tar.gz",
            ],
            sha256 = "062bf45bee36ce7c2a55ae26b8b5324720f370d420a05cba91b9448c64ffdbea",
            strip_prefix = "cmake-3.9.6-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.9.6-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.9.6/cmake-3.9.6-win32-x86.zip",
            ],
            sha256 = "8dd4b6c35afa8e0c044789b55645327cc4bb75276f87c6758f9997c08f559256",
            strip_prefix = "cmake-3.9.6-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.9.6-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.9.6/cmake-3.9.6-win64-x64.zip",
            ],
            sha256 = "fa667bf658fa526e4e2489a9704f83f851e5ded66a18904424ba1b8505fd4dc0",
            strip_prefix = "cmake-3.9.6-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.9.6_toolchains",
            repos = {
                "cmake-3.9.6-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.9.6-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.9.6-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.9.6-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.9.6_toolchains//:cmake-3.9.6-Darwin-x86_64_toolchain",
            "@cmake_3.9.6_toolchains//:cmake-3.9.6-Linux-x86_64_toolchain",
            "@cmake_3.9.6_toolchains//:cmake-3.9.6-win32-x86_toolchain",
            "@cmake_3.9.6_toolchains//:cmake-3.9.6-win64-x64_toolchain",
        )

        return

    if "3.8.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.8.2-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.8.2/cmake-3.8.2-Darwin-x86_64.tar.gz",
            ],
            sha256 = "d164a1fa2a3d2f276c83ab55c7014b14b501b939d1a5a56f6788eb5cddc7acb6",
            strip_prefix = "cmake-3.8.2-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.8.2-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.8.2/cmake-3.8.2-Linux-x86_64.tar.gz",
            ],
            sha256 = "33e4851d3219b720f4b64fcf617151168f1bffdf5afad25eb4b7f5f58cee3a08",
            strip_prefix = "cmake-3.8.2-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.8.2-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.8.2/cmake-3.8.2-win32-x86.zip",
            ],
            sha256 = "3fa45a8ad473a8e0579ec826b3355f864750a7455987ed425a9c6fdf4820b5f2",
            strip_prefix = "cmake-3.8.2-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.8.2-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.8.2/cmake-3.8.2-win64-x64.zip",
            ],
            sha256 = "202c2416c964fb7199e5d7ce92336a44c7ba65d5ccca36246f41d7d09bd8ffe2",
            strip_prefix = "cmake-3.8.2-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.8.2_toolchains",
            repos = {
                "cmake-3.8.2-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.8.2-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.8.2-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.8.2-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.8.2_toolchains//:cmake-3.8.2-Darwin-x86_64_toolchain",
            "@cmake_3.8.2_toolchains//:cmake-3.8.2-Linux-x86_64_toolchain",
            "@cmake_3.8.2_toolchains//:cmake-3.8.2-win32-x86_toolchain",
            "@cmake_3.8.2_toolchains//:cmake-3.8.2-win64-x64_toolchain",
        )

        return

    if "3.7.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.7.2-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.7.2/cmake-3.7.2-Darwin-x86_64.tar.gz",
            ],
            sha256 = "0175e97748052dfc15ebd3c0aa65286e5ec20ca22ed606ce88940e699496b03c",
            strip_prefix = "cmake-3.7.2-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.7.2-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.7.2/cmake-3.7.2-Linux-x86_64.tar.gz",
            ],
            sha256 = "0e6ec35d4fa9bf79800118916b51928b6471d5725ff36f1d0de5ebb34dcd5406",
            strip_prefix = "cmake-3.7.2-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.7.2-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.7.2/cmake-3.7.2-win32-x86.zip",
            ],
            sha256 = "ec5e299d412e0272e01d4de5bf07718f42c96361f83d51cc39f91bf49cc3e5c3",
            strip_prefix = "cmake-3.7.2-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.7.2-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.7.2/cmake-3.7.2-win64-x64.zip",
            ],
            sha256 = "def3bb81dfd922ce1ea2a0647645eefb60e128d520c8ca707c5996c331bc8b48",
            strip_prefix = "cmake-3.7.2-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.7.2_toolchains",
            repos = {
                "cmake-3.7.2-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.7.2-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.7.2-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.7.2-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.7.2_toolchains//:cmake-3.7.2-Darwin-x86_64_toolchain",
            "@cmake_3.7.2_toolchains//:cmake-3.7.2-Linux-x86_64_toolchain",
            "@cmake_3.7.2_toolchains//:cmake-3.7.2-win32-x86_toolchain",
            "@cmake_3.7.2_toolchains//:cmake-3.7.2-win64-x64_toolchain",
        )

        return

    if "3.6.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.6.3-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.6.3/cmake-3.6.3-Darwin-x86_64.tar.gz",
            ],
            sha256 = "cba5b50365fa79c36bb954dc44d6e3455e431c47937fe13e6ddd06b61fe428a4",
            strip_prefix = "cmake-3.6.3-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.6.3-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.6.3/cmake-3.6.3-Linux-x86_64.tar.gz",
            ],
            sha256 = "9d915d505c07d84b610e1be6242c7cad68b4b7a4090ce85ecf9cec5effa47c43",
            strip_prefix = "cmake-3.6.3-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.6.3-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.6.3/cmake-3.6.3-win32-x86.zip",
            ],
            sha256 = "556628f134b2372b8f02688787ca44b02d893c57b6eeaa9271ac51a4a2d4a4ed",
            strip_prefix = "cmake-3.6.3-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.6.3-win64-x64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.6.3/cmake-3.6.3-win64-x64.zip",
            ],
            sha256 = "263b78aba6e63098353b2f8beecf293f5f307f9a70575a81867c3f8cb18a6a99",
            strip_prefix = "cmake-3.6.3-win64-x64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.6.3_toolchains",
            repos = {
                "cmake-3.6.3-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.6.3-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.6.3-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
                "cmake-3.6.3-win64-x64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.6.3_toolchains//:cmake-3.6.3-Darwin-x86_64_toolchain",
            "@cmake_3.6.3_toolchains//:cmake-3.6.3-Linux-x86_64_toolchain",
            "@cmake_3.6.3_toolchains//:cmake-3.6.3-win32-x86_toolchain",
            "@cmake_3.6.3_toolchains//:cmake-3.6.3-win64-x64_toolchain",
        )

        return

    if "3.5.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.5.2-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.5.2/cmake-3.5.2-Darwin-x86_64.tar.gz",
            ],
            sha256 = "0263be8f59ba1ae88172d5db769c2af69bcd8b2cbd4a9b1a981c406ce609a4ca",
            strip_prefix = "cmake-3.5.2-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.5.2-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.5.2/cmake-3.5.2-Linux-x86_64.tar.gz",
            ],
            sha256 = "5f7aeaebe33521647625e0411467de71a2886743e4aa2c179e04c9e141c6c8cd",
            strip_prefix = "cmake-3.5.2-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.5.2-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.5.2/cmake-3.5.2-win32-x86.zip",
            ],
            sha256 = "671073aee66b3480a564d0736792e40570a11e861bb34819bb7ae7858bbdfb80",
            strip_prefix = "cmake-3.5.2-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.5.2_toolchains",
            repos = {
                "cmake-3.5.2-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.5.2-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.5.2-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.5.2_toolchains//:cmake-3.5.2-Darwin-x86_64_toolchain",
            "@cmake_3.5.2_toolchains//:cmake-3.5.2-Linux-x86_64_toolchain",
            "@cmake_3.5.2_toolchains//:cmake-3.5.2-win32-x86_toolchain",
        )

        return

    if "3.4.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.4.3-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.4.3/cmake-3.4.3-Darwin-x86_64.tar.gz",
            ],
            sha256 = "dec18a78b8ed6b2ff24bd61d578063c2cd667327d62892592121cf600c83f635",
            strip_prefix = "cmake-3.4.3-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.4.3-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.4.3/cmake-3.4.3-Linux-x86_64.tar.gz",
            ],
            sha256 = "66b8d315c852908be9f79e1a18b8778714659fce4ddb2d041af8680a239202fc",
            strip_prefix = "cmake-3.4.3-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.4.3-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.4.3/cmake-3.4.3-win32-x86.zip",
            ],
            sha256 = "448e894dd3df7f3f1ae509ab940f6fd5653ce86eba0677e19ad4bccb44a585ae",
            strip_prefix = "cmake-3.4.3-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.4.3_toolchains",
            repos = {
                "cmake-3.4.3-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.4.3-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.4.3-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.4.3_toolchains//:cmake-3.4.3-Darwin-x86_64_toolchain",
            "@cmake_3.4.3_toolchains//:cmake-3.4.3-Linux-x86_64_toolchain",
            "@cmake_3.4.3_toolchains//:cmake-3.4.3-win32-x86_toolchain",
        )

        return

    if "3.3.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.3.2-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.3.2/cmake-3.3.2-Darwin-x86_64.tar.gz",
            ],
            sha256 = "7e685d4e2ef90e0b9b837138049c98f4b0cbda2ee27db77c3d39b6053b7a7e71",
            strip_prefix = "cmake-3.3.2-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.3.2-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.3.2/cmake-3.3.2-Linux-x86_64.tar.gz",
            ],
            sha256 = "0c6e1d1dedf58b21f6bd3de9f03ca435c3d13c4e709b1d67432ca12df07d8208",
            strip_prefix = "cmake-3.3.2-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.3.2-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.3.2/cmake-3.3.2-win32-x86.zip",
            ],
            sha256 = "eaaa54ebb915fe56f4117edf78d9f8197623e8559918860079d3c63a075f58db",
            strip_prefix = "cmake-3.3.2-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.3.2_toolchains",
            repos = {
                "cmake-3.3.2-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.3.2-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.3.2-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.3.2_toolchains//:cmake-3.3.2-Darwin-x86_64_toolchain",
            "@cmake_3.3.2_toolchains//:cmake-3.3.2-Linux-x86_64_toolchain",
            "@cmake_3.3.2_toolchains//:cmake-3.3.2-win32-x86_toolchain",
        )

        return

    if "3.2.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.2.3-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.2.3/cmake-3.2.3-Darwin-x86_64.tar.gz",
            ],
            sha256 = "76dbf1f37bb716a39d720a6ec517d0c7f71784f0be9549574cb05a881aa89374",
            strip_prefix = "cmake-3.2.3-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.2.3-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.2.3/cmake-3.2.3-Linux-x86_64.tar.gz",
            ],
            sha256 = "f65c5533079bac88deafeee00df6d62d640622d874d4bc207d46efed5720ca5b",
            strip_prefix = "cmake-3.2.3-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.2.3-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.2.3/cmake-3.2.3-win32-x86.zip",
            ],
            sha256 = "d4dccb7dfba6c788efde1906474ff4039af05b6b44256e776977b5660dee2231",
            strip_prefix = "cmake-3.2.3-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.2.3_toolchains",
            repos = {
                "cmake-3.2.3-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.2.3-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.2.3-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.2.3_toolchains//:cmake-3.2.3-Darwin-x86_64_toolchain",
            "@cmake_3.2.3_toolchains//:cmake-3.2.3-Linux-x86_64_toolchain",
            "@cmake_3.2.3_toolchains//:cmake-3.2.3-win32-x86_toolchain",
        )

        return

    if "3.1.3" == version:
        maybe(
            http_archive,
            name = "cmake-3.1.3-Darwin-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.1.3/cmake-3.1.3-Darwin-x86_64.tar.gz",
            ],
            sha256 = "11d79718f10ba5b181f129d44eae7bece2ced0c98f41fcad003556d28d896001",
            strip_prefix = "cmake-3.1.3-Darwin-x86_64/CMake.app/Contents",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.1.3-Linux-x86_64",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.1.3/cmake-3.1.3-Linux-x86_64.tar.gz",
            ],
            sha256 = "d251b95829d29e4529dfdbc1e676cd0ef86e9544976603db2f5c26364ad71146",
            strip_prefix = "cmake-3.1.3-Linux-x86_64",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake",
            ),
        )

        maybe(
            http_archive,
            name = "cmake-3.1.3-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.1.3/cmake-3.1.3-win32-x86.zip",
            ],
            sha256 = "ec7c3c7e2e071cda54a3718e65e50af322685b960d12046525063c1633c7865c",
            strip_prefix = "cmake-3.1.3-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.1.3_toolchains",
            repos = {
                "cmake-3.1.3-Darwin-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "cmake-3.1.3-Linux-x86_64": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "cmake-3.1.3-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.1.3_toolchains//:cmake-3.1.3-Darwin-x86_64_toolchain",
            "@cmake_3.1.3_toolchains//:cmake-3.1.3-Linux-x86_64_toolchain",
            "@cmake_3.1.3_toolchains//:cmake-3.1.3-win32-x86_toolchain",
        )

        return

    if "3.0.2" == version:
        maybe(
            http_archive,
            name = "cmake-3.0.2-win32-x86",
            urls = [
                "https://github.com/Kitware/CMake/releases/download/v3.0.2/cmake-3.0.2-win32-x86.zip",
            ],
            sha256 = "4a83978bf2f5b92f66398ab3a2630d65e9c1942aed7d51599c056bd419b39bb5",
            strip_prefix = "cmake-3.0.2-win32-x86",
            build_file_content = _CMAKE_BUILD_FILE.format(
                bin = "cmake.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "cmake_3.0.2_toolchains",
            repos = {
                "cmake-3.0.2-win32-x86": [
                    "@platforms//cpu:x86_32",
                    "@platforms//os:windows",
                ],
            },
            tool = "cmake",
        )

        native.register_toolchains(
            "@cmake_3.0.2_toolchains//:cmake-3.0.2-win32-x86_toolchain",
        )

        return

    fail("Unsupported version: " + str(version))

def _ninja_toolchains(version):
    if "1.10.2" == version:
        maybe(
            http_archive,
            name = "ninja_1.10.2_linux",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip",
            ],
            sha256 = "763464859c7ef2ea3a0a10f4df40d2025d3bb9438fcb1228404640410c0ec22d",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.2_mac",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-mac.zip",
            ],
            sha256 = "6fa359f491fac7e5185273c6421a000eea6a2f0febf0ac03ac900bd4d80ed2a5",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.2_win",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip",
            ],
            sha256 = "bbde850d247d2737c5764c927d1071cbb1f1957dcabda4a130fa8547c12c695f",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "ninja_1.10.2_toolchains",
            repos = {
                "ninja_1.10.2_linux": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "ninja_1.10.2_mac": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "ninja_1.10.2_win": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "ninja",
        )

        native.register_toolchains(
            "@ninja_1.10.2_toolchains//:ninja_1.10.2_linux_toolchain",
            "@ninja_1.10.2_toolchains//:ninja_1.10.2_mac_toolchain",
            "@ninja_1.10.2_toolchains//:ninja_1.10.2_win_toolchain",
        )

        return

    if "1.10.1" == version:
        maybe(
            http_archive,
            name = "ninja_1.10.1_linux",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-linux.zip",
            ],
            sha256 = "7ee7f467a1a747c5b5e02342904af9c24e84df4ca993541f1c4d0f113cab27aa",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.1_mac",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-mac.zip",
            ],
            sha256 = "0bd650190d4405c15894055e349d9b59d5690b0389551d757c5ed2d3841972d1",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.1_win",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-win.zip",
            ],
            sha256 = "5d1211ea003ec9760ad7f5d313ebf0b659d4ffafa221187d2b4444bc03714a33",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "ninja_1.10.1_toolchains",
            repos = {
                "ninja_1.10.1_linux": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "ninja_1.10.1_mac": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "ninja_1.10.1_win": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "ninja",
        )

        native.register_toolchains(
            "@ninja_1.10.1_toolchains//:ninja_1.10.1_linux_toolchain",
            "@ninja_1.10.1_toolchains//:ninja_1.10.1_mac_toolchain",
            "@ninja_1.10.1_toolchains//:ninja_1.10.1_win_toolchain",
        )

        return

    if "1.10.0" == version:
        maybe(
            http_archive,
            name = "ninja_1.10.0_linux",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip",
            ],
            sha256 = "6566836ddf3d72ca06685b34814e0c6fa0f0943542d651d0dab3150f10307c82",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.0_mac",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip",
            ],
            sha256 = "2ee405c0e205d55666c60cc9c0d8d04c8ede06d3ef2e2c2aabe08fd81c17d22e",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.10.0_win",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-win.zip",
            ],
            sha256 = "919fd158c16bf135e8a850bb4046ec1ce28a7439ee08b977cd0b7f6b3463d178",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "ninja_1.10.0_toolchains",
            repos = {
                "ninja_1.10.0_linux": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "ninja_1.10.0_mac": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "ninja_1.10.0_win": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "ninja",
        )

        native.register_toolchains(
            "@ninja_1.10.0_toolchains//:ninja_1.10.0_linux_toolchain",
            "@ninja_1.10.0_toolchains//:ninja_1.10.0_mac_toolchain",
            "@ninja_1.10.0_toolchains//:ninja_1.10.0_win_toolchain",
        )

        return

    if "1.9.0" == version:
        maybe(
            http_archive,
            name = "ninja_1.9.0_linux",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip",
            ],
            sha256 = "1b1235f2b0b4df55ac6d80bbe681ea3639c9d2c505c7ff2159a3daf63d196305",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.9.0_mac",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-mac.zip",
            ],
            sha256 = "26d32a79f786cca1004750f59e545199bf110e21e300d3c2424c1fddd78f28ab",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.9.0_win",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip",
            ],
            sha256 = "2d70010633ddaacc3af4ffbd21e22fae90d158674a09e132e06424ba3ab036e9",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "ninja_1.9.0_toolchains",
            repos = {
                "ninja_1.9.0_linux": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "ninja_1.9.0_mac": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "ninja_1.9.0_win": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "ninja",
        )

        native.register_toolchains(
            "@ninja_1.9.0_toolchains//:ninja_1.9.0_linux_toolchain",
            "@ninja_1.9.0_toolchains//:ninja_1.9.0_mac_toolchain",
            "@ninja_1.9.0_toolchains//:ninja_1.9.0_win_toolchain",
        )

        return

    if "1.8.2" == version:
        maybe(
            http_archive,
            name = "ninja_1.8.2_linux",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip",
            ],
            sha256 = "d2fea9ff33b3ef353161ed906f260d565ca55b8ca0568fa07b1d2cab90a84a07",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.8.2_mac",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-mac.zip",
            ],
            sha256 = "0347d55c66061652b26f48769d566761630ffde3143793b29064a57f356542cc",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja",
            ),
        )

        maybe(
            http_archive,
            name = "ninja_1.8.2_win",
            urls = [
                "https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip",
            ],
            sha256 = "c80313e6c26c0b9e0c241504718e2d8bbc2798b73429933adf03fdc6d84f0e70",
            strip_prefix = "",
            build_file_content = _NINJA_BUILD_FILE.format(
                bin = "ninja.exe",
            ),
        )

        # buildifier: leave-alone
        maybe(
            prebuilt_toolchains_repository,
            name = "ninja_1.8.2_toolchains",
            repos = {
                "ninja_1.8.2_linux": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:linux",
                ],
                "ninja_1.8.2_mac": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:macos",
                ],
                "ninja_1.8.2_win": [
                    "@platforms//cpu:x86_64",
                    "@platforms//os:windows",
                ],
            },
            tool = "ninja",
        )

        native.register_toolchains(
            "@ninja_1.8.2_toolchains//:ninja_1.8.2_linux_toolchain",
            "@ninja_1.8.2_toolchains//:ninja_1.8.2_mac_toolchain",
            "@ninja_1.8.2_toolchains//:ninja_1.8.2_win_toolchain",
        )

        return

    fail("Unsupported version: " + str(version))

def _make_toolchains():
    # There are currently no prebuilt make binaries
    pass
